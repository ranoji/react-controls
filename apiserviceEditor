import React, { useState } from "react";
import { Box, Select, MenuItem, IconButton, Typography, Paper } from "@mui/material";
import { ContentCopy } from "@mui/icons-material";

const CodeEditorWithLanguageSelector = ({ title, codeSnippets, apiEndpoint, requestBody }) => {
  const languages = Object.keys(codeSnippets); // Extract available languages
  const [selectedLanguage, setSelectedLanguage] = useState(languages[0]); // Default to the first language

  // Function to generate line numbers
  const addLineNumbers = (code) => {
    const lines = code.split("\n");
    return lines.map((line, index) => `${index + 1}`.padStart(2, " ") + ` | ` + line).join("\n");
  };

  // Function to replace placeholders in the code snippet
  const generateCodeSnippet = (language) => {
    let codeTemplate = codeSnippets[language];
    return codeTemplate
      .replace("{API_ENDPOINT}", apiEndpoint)
      .replace("{REQUEST_BODY}", JSON.stringify(requestBody, null, 2));
  };

  const handleCopy = () => {
    // Generate the clean code snippet without line numbers
    const cleanCode = generateCodeSnippet(selectedLanguage);
    navigator.clipboard.writeText(cleanCode);
    alert("Code copied to clipboard!");
  };

  return (
    <Box
      sx={{
        position: "relative",
        border: "1px solid black", // Black border for the editor
        borderRadius: "8px", // Rounded corners
        backgroundColor: "white", // Editor background
        padding: "16px",
        overflow: "hidden", // Prevent content overflow
      }}
    >
      {/* Header with Dropdown and Copy Button */}
      <Box
        sx={{
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          marginBottom: "8px",
        }}
      >
        <Typography
          sx={{ fontSize: "14px", fontWeight: "bold", color: "#555" }}
        >
          {title || "CODE SNIPPET"}
        </Typography>

        {/* Language Selector */}
        <Select
          value={selectedLanguage}
          onChange={(e) => setSelectedLanguage(e.target.value)}
          size="small"
          disableUnderline
          sx={{
            backgroundColor: "transparent", // Transparent background
            color: "white", // White text
            fontSize: "14px",
            fontWeight: "bold",
            "& .MuiOutlinedInput-notchedOutline": {
              border: "none", // Remove the border
            },
            "& .MuiSelect-icon": {
              color: "white", // Change dropdown arrow to white
            },
          }}
        >
          {languages.map((lang) => (
            <MenuItem key={lang} value={lang}>
              {lang.toUpperCase()}
            </MenuItem>
          ))}
        </Select>
      </Box>

      {/* Code Editor */}
      <Paper
        elevation={0}
        sx={{
          backgroundColor: "white", // White editor background
          padding: "12px",
          borderRadius: "4px",
          fontFamily: "monospace",
          fontSize: "14px",
          color: "#333",
          whiteSpace: "pre-wrap",
          overflowX: "auto", // Scroll horizontally if content overflows
          border: "1px solid #e0e0e0", // Light border for the editor
          position: "relative",
        }}
      >
        <Typography
          component="pre"
          sx={{
            margin: 0,
            whiteSpace: "pre-wrap",
            fontFamily: "monospace",
            fontSize: "14px",
          }}
        >
          {addLineNumbers(generateCodeSnippet(selectedLanguage))}
        </Typography>
      </Paper>

      {/* Copy Button */}
      <Box
        sx={{
          position: "absolute",
          top: "12px",
          right: "12px",
        }}
      >
        <IconButton
          color="primary"
          onClick={handleCopy}
          sx={{
            backgroundColor: "#f0f0f0", // Light background
            borderRadius: "50%",
          }}
        >
          <ContentCopy />
        </IconButton>
      </Box>
    </Box>
  );
};

export default CodeEditorWithLanguageSelector;
