import React, { useState } from "react";
import { Box, Select, MenuItem, IconButton, Typography, Paper } from "@mui/material";
import { ContentCopy } from "@mui/icons-material";

const CodeEditorWithLanguageSelector = ({ title, codeSnippets }) => {
  const languages = Object.keys(codeSnippets); // Extract available languages
  const [selectedLanguage, setSelectedLanguage] = useState(languages[0]); // Default to the first language

  const handleCopy = () => {
    navigator.clipboard.writeText(codeSnippets[selectedLanguage]);
    alert("Code copied to clipboard!");
  };

  return (
    <Box
      sx={{
        position: "relative",
        border: "1px solid black", // Black border for the editor
        borderRadius: "8px", // Rounded corners
        backgroundColor: "white", // Editor background
        padding: "16px",
        overflow: "hidden", // Prevent content overflow
      }}
    >
      {/* Header with Dropdown and Copy Button */}
      <Box
        sx={{
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          marginBottom: "8px",
        }}
      >
        <Typography
          sx={{ fontSize: "14px", fontWeight: "bold", color: "#555" }}
        >
          {title || "CODE SNIPPET"}
        </Typography>

        {/* Language Selector */}
        <Select
          value={selectedLanguage}
          onChange={(e) => setSelectedLanguage(e.target.value)}
          size="small"
          sx={{
            backgroundColor: "#f0f0f0", // Light gray background
            borderRadius: "4px", // Rounded corners
            fontSize: "14px",
            fontWeight: "bold",
          }}
        >
          {languages.map((lang) => (
            <MenuItem key={lang} value={lang}>
              {lang.toUpperCase()}
            </MenuItem>
          ))}
        </Select>
      </Box>

      {/* Code Editor */}
      <Paper
        elevation={0}
        sx={{
          backgroundColor: "white", // White editor background
          padding: "12px",
          borderRadius: "4px",
          fontFamily: "monospace",
          fontSize: "14px",
          color: "#333",
          whiteSpace: "pre-wrap",
          overflowX: "auto", // Scroll horizontally if content overflows
          border: "1px solid #e0e0e0", // Light border for the editor
        }}
      >
        {codeSnippets[selectedLanguage]}
      </Paper>

      {/* Copy Button */}
      <Box
        sx={{
          position: "absolute",
          top: "12px",
          right: "12px",
        }}
      >
        <IconButton
          color="primary"
          onClick={handleCopy}
          sx={{
            backgroundColor: "#f0f0f0", // Light background
            borderRadius: "50%",
          }}
        >
          <ContentCopy />
        </IconButton>
      </Box>
    </Box>
  );
};

export default CodeEditorWithLanguageSelector;

--------------------------------------------------------------------

App.js

import React from "react";
import CodeEditorWithLanguageSelector from "./CodeEditorWithLanguageSelector";

const codeSnippets = {
  java: `
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.OutputStream;

public class Main {
    public static void main(String[] args) throws Exception {
        URL url = new URL("https://api.example.com/endpoint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Content-Type", "application/json");
        connection.setDoOutput(true);

        String requestBody = "{\\"key1\\": \\"value1\\", \\"key2\\": \\"value2\\"}";
        try (OutputStream os = connection.getOutputStream()) {
            os.write(requestBody.getBytes());
        }

        System.out.println(connection.getResponseCode());
    }
}
  `,
  nodejs: `
const axios = require('axios');

axios.post('https://api.example.com/endpoint', {
    key1: 'value1',
    key2: 'value2'
})
.then(response => {
    console.log(response.data);
})
.catch(error => {
    console.error(error);
});
  `,
  curl: `
curl -X POST https://api.example.com/endpoint \\
-H "Content-Type: application/json" \\
-d '{"key1": "value1", "key2": "value2"}'
  `,
};

const App = () => {
  return (
    <div>
      <Typography variant="h4" gutterBottom>
        API Documentation
      </Typography>
      <CodeEditorWithLanguageSelector codeSnippets={codeSnippets} />
    </div>
  );
};

export default App;
